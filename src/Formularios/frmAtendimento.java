/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Auxiliares.GerenciaJFrames;
import Auxiliares.ManipulaComponentes;
import Configuracoes.DAO;
import Entidades.Atendimento;
import Entidades.Cliente;
import Entidades.ItemParaServico;
import Facade.AtendimentoFacade;
import Facade.ItemParaServicoFacade;
import Models.AtendimentoItensParaServicoTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Formatter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JFormattedTextField.AbstractFormatterFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
import javax.swing.text.MaskFormatter;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;

/**
 *
 * @author Joanes Gonzaga
 */
public class frmAtendimento extends javax.swing.JFrame {

    ManipulaComponentes.statusCadastro statusFrame;
    Integer novaChave = 0;
    ArrayList<JButton> botoes;
    List listaDeItensParaServico;
    AtendimentoItensParaServicoTableModel modelItens;
    Cliente cliente;
    ArrayList<Cliente> clientesRetornados;
    ArrayList<JTextField> camposObrigatorios;
    ResultSet rs;
    Atendimento atendimento;

    /**
     * Creates new form frmAtendimento
     */
    public frmAtendimento() {
        initComponents();

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        GerenciaJFrames gerenciaFrame = new GerenciaJFrames();
        gerenciaFrame.posicionaFrame(this);
        listaDeItensParaServico = new ArrayList();
        modelItens = new AtendimentoItensParaServicoTableModel(listaDeItensParaServico);
        tableItensParaServico.setModel(modelItens);

        formataTabela();

        // ManipulaComponentes.bloqueiaBarraDeEspaco(this);
        //Ao instancia o objeto Frame, define a variável statusFrame com o valor Navegando;
        statusFrame = statusFrame.Navegando;

        //Cria o ArrayList de campos obrigatórios
        camposObrigatorios = new ArrayList();
        camposObrigatorios.add(txtItem);
        camposObrigatorios.add(txtMarca);
        camposObrigatorios.add(txtModelo);
        camposObrigatorios.add(txtNSerie);

        //Cria o ArrayList de botoes presentes no Frame
        botoes = new ArrayList<>();
        botoes.add(btnAdd);
        botoes.add(btnEdit);
        botoes.add(btnRemove);
        botoes.add(btnSearch);
        botoes.add(btnDispose);
        //Em seguida, chama o método que controla os botoes do Frame a partir do valor da variável statusFrame

        statusFrame = ManipulaComponentes.statusCadastro.Navegando;
        ManipulaComponentes.gerenciaBotoes(botoes, statusFrame);
        setTitle("Softaway Sistemas - Atendimento - " + statusFrame);

        carregaComboVendedores();
        carregaValoresPadrao();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnGroupTipoPessoa = new javax.swing.ButtonGroup();
        panelCabecalho = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelCodigoAtendimento = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbVendedores = new javax.swing.JComboBox();
        dateDataAtendimento = new com.toedter.calendar.JDateChooser();
        panelConsulta = new javax.swing.JPanel();
        btnPesquisarCliente = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        panelRadioButton = new javax.swing.JPanel();
        rbPF = new javax.swing.JRadioButton();
        rbPJ = new javax.swing.JRadioButton();
        jffCPF_CNPJ = new javax.swing.JFormattedTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        jlLogo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNomeRSocial = new javax.swing.JTextField();
        txtNomeFantasia = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtRGIE = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtContato = new javax.swing.JTextField();
        panelBotoesCliente = new javax.swing.JPanel();
        btnAddCliente = new javax.swing.JButton();
        btnRemoverCliente = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtCodigoCliente = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtItem = new javax.swing.JTextField();
        txtNSerie = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtModelo = new javax.swing.JTextField();
        ttPAtrimonio = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtLivre = new javax.swing.JTextField();
        dateAno = new com.toedter.calendar.JYearChooser();
        jLabel2 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        panelBotoesItens = new javax.swing.JPanel();
        btnBuscarItemServico = new javax.swing.JButton();
        btnAddItemServico = new javax.swing.JButton();
        btnRemoveITemServico = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableItensParaServico = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDispose = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Atendimento - Ordem de Serviço - Softaway Sistemas");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        panelCabecalho.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Atendimento N:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelCabecalho.add(jLabel1, gridBagConstraints);

        labelCodigoAtendimento.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        labelCodigoAtendimento.setText("0000000");
        labelCodigoAtendimento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelCabecalho.add(labelCodigoAtendimento, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Atendente: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelCabecalho.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelCabecalho.add(cbVendedores, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelCabecalho.add(dateDataAtendimento, gridBagConstraints);

        panelConsulta.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));
        panelConsulta.setLayout(new java.awt.GridBagLayout());

        btnPesquisarCliente.setText("Pesquisar");
        btnPesquisarCliente.setPreferredSize(new java.awt.Dimension(77, 23));
        btnPesquisarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarClienteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelConsulta.add(btnPesquisarCliente, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel8.setText("Telefone: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelConsulta.add(jLabel8, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel6.setText("CPF/CNPJ: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelConsulta.add(jLabel6, gridBagConstraints);

        panelRadioButton.setLayout(new java.awt.GridBagLayout());

        btnGroupTipoPessoa.add(rbPF);
        rbPF.setText("Pessoa Física");
        rbPF.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbPFItemStateChanged(evt);
            }
        });
        rbPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        panelRadioButton.add(rbPF, gridBagConstraints);

        btnGroupTipoPessoa.add(rbPJ);
        rbPJ.setText("Pessoa Jurídica");
        rbPJ.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbPJItemStateChanged(evt);
            }
        });
        rbPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPJActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        panelRadioButton.add(rbPJ, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        panelConsulta.add(panelRadioButton, gridBagConstraints);

        jffCPF_CNPJ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jffCPF_CNPJFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelConsulta.add(jffCPF_CNPJ, gridBagConstraints);

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(0##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panelConsulta.add(txtTelefone, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        panelCabecalho.add(panelConsulta, gridBagConstraints);

        jlLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/devmedia_logo.gif"))); // NOI18N
        jlLogo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        panelCabecalho.add(jlLogo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(panelCabecalho, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados do Cliente:"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel4.setText("Nome/R.Social: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel5.setText("Nome Fantasia: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(txtNomeRSocial, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(txtNomeFantasia, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel7.setText("RG/IE: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(txtRGIE, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel9.setText("Contato: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(txtContato, gridBagConstraints);

        panelBotoesCliente.setLayout(new java.awt.GridBagLayout());

        btnAddCliente.setText("Adicionar Cliente");
        btnAddCliente.setPreferredSize(new java.awt.Dimension(90, 25));
        btnAddCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddClienteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        panelBotoesCliente.add(btnAddCliente, gridBagConstraints);

        btnRemoverCliente.setText("Remover Cliente");
        btnRemoverCliente.setPreferredSize(new java.awt.Dimension(90, 25));
        btnRemoverCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverClienteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        panelBotoesCliente.add(btnRemoverCliente, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(panelBotoesCliente, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel17.setText("Código:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel17, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(txtCodigoCliente, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Item para Serviço:"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel10.setText("Descrição Item: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel10, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel11.setText("N. Série: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel11, gridBagConstraints);

        txtItem.setName("Descrição do Item"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtItem, gridBagConstraints);

        txtNSerie.setName("Número de Série"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtNSerie, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel12.setText("Modelo: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel12, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel13.setText("Patrimônio: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel13, gridBagConstraints);

        txtModelo.setName("Modelo"); // NOI18N
        txtModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModeloActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtModelo, gridBagConstraints);

        ttPAtrimonio.setName("Patrimônio"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(ttPAtrimonio, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel14.setText("Marca: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel14, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel15.setText("ANO: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel15, gridBagConstraints);

        txtMarca.setName("Marca"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtMarca, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel16.setText("Campo Livre: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel16, gridBagConstraints);

        txtLivre.setName("Campo Livre"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(txtLivre, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 9;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(dateAno, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel2.setText("Quantidade:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel2, gridBagConstraints);

        jSpinner1.setName("Quantidade"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.25;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jSpinner1, gridBagConstraints);

        panelBotoesItens.setLayout(new java.awt.GridBagLayout());

        btnBuscarItemServico.setText("Buscar Item");
        btnBuscarItemServico.setPreferredSize(new java.awt.Dimension(90, 25));
        btnBuscarItemServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarItemServicoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        panelBotoesItens.add(btnBuscarItemServico, gridBagConstraints);

        btnAddItemServico.setText("Adicionar Item");
        btnAddItemServico.setPreferredSize(new java.awt.Dimension(90, 25));
        btnAddItemServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemServicoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        panelBotoesItens.add(btnAddItemServico, gridBagConstraints);

        btnRemoveITemServico.setText("Remover Item");
        btnRemoveITemServico.setPreferredSize(new java.awt.Dimension(90, 25));
        btnRemoveITemServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveITemServicoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        panelBotoesItens.add(btnRemoveITemServico, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(panelBotoesItens, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanel3, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Itens Inseridos no Serviço:"));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        tableItensParaServico.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(tableItensParaServico);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel4.add(jScrollPane1, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.5;
        jPanel4.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        getContentPane().add(jPanel4, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Observações do Item para Serviço:"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel5.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.15;
        getContentPane().add(jPanel5, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Comandos:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel6.setLayout(new java.awt.GridBagLayout());

        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdd.setText("Adicionar");
        btnAdd.setMaximumSize(new java.awt.Dimension(75, 25));
        btnAdd.setMinimumSize(new java.awt.Dimension(75, 25));
        btnAdd.setPreferredSize(new java.awt.Dimension(77, 23));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(btnAdd, gridBagConstraints);

        btnEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEdit.setText("Editar");
        btnEdit.setPreferredSize(new java.awt.Dimension(77, 23));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(btnEdit, gridBagConstraints);

        btnRemove.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRemove.setText("Excluir");
        btnRemove.setPreferredSize(new java.awt.Dimension(77, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(btnRemove, gridBagConstraints);

        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearch.setText("Pesquisar");
        btnSearch.setPreferredSize(new java.awt.Dimension(77, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(btnSearch, gridBagConstraints);

        btnDispose.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDispose.setText("Sair");
        btnDispose.setPreferredSize(new java.awt.Dimension(77, 23));
        btnDispose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisposeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(btnDispose, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(jPanel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jSeparator2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDisposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisposeActionPerformed
        dispose();
    }//GEN-LAST:event_btnDisposeActionPerformed

    private void btnPesquisarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarClienteActionPerformed

        clientesRetornados = pesquisarClientes();
        if (clientesRetornados == null || clientesRetornados.size() <= 0) {
            //return;
            JOptionPane.showMessageDialog(null, "Sua Pesquisa Não Retornou Resultados!");
        } else if (clientesRetornados.size() > 1) {
            JOptionPane.showMessageDialog(null, "Sua Pesquisa Retornou MAIS DE 01 Resultado!");
        } else {
            cliente = null;
            cliente = clientesRetornados.get(0);
            vinculaObjetoClienteACamposCliente();
            /*
            txtNomeRSocial.setText(cliente.getNome());
            txtNomeFantasia.setText(cliente.getNomeFantasia());
            txtRGIE.setText(cliente.getRg());
            txtContato.setText(cliente.getFonePrincipal());
            */
        }
    }//GEN-LAST:event_btnPesquisarClienteActionPerformed

    private void rbPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPFActionPerformed
        aplicarMask();
    }//GEN-LAST:event_rbPFActionPerformed

    private void rbPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPJActionPerformed
        aplicarMask();
    }//GEN-LAST:event_rbPJActionPerformed

    private void rbPJItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbPJItemStateChanged
        aplicarMask();
    }//GEN-LAST:event_rbPJItemStateChanged

    private void rbPFItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbPFItemStateChanged
        aplicarMask();
    }//GEN-LAST:event_rbPFItemStateChanged

    private void jffCPF_CNPJFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jffCPF_CNPJFocusGained
        aplicarMask();
        txtTelefone.setText(null);
    }//GEN-LAST:event_jffCPF_CNPJFocusGained

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        dateDataAtendimento.setDate(new Date());
        atendimento = new Atendimento();
        atendimento.setDataEntrada(dateDataAtendimento.getDate());

        if (statusFrame == statusFrame.Navegando) {

            AtendimentoFacade novoAtendimento = new AtendimentoFacade();
            novaChave = novoAtendimento.retornaChaveUnica(atendimento);

            if (novaChave <= 0) {
                JOptionPane.showMessageDialog(null, "Não Foi Possível Iniciar Um Novo Atendimento!");
            } else {
                statusFrame = statusFrame.Adicionando;
                atendimento.setCodigo(novaChave);
                Auxiliares.ManipulaComponentes.gerenciaBotoes(botoes, statusFrame);
                labelCodigoAtendimento.setText(novaChave.toString());
                setTitle("Softaway Sistemas - Atendimento - " + statusFrame);
            }

        } else if (statusFrame == statusFrame.Editando) {

        } else if (statusFrame == statusFrame.Adicionando) {
            
            //Gravar, mas não destruir a chaveUnica, pois a mesma continuará a ser consultada (Grava e mantém o Atendimento na tela)

        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModeloActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        
        if(statusFrame == statusFrame.Navegando){
            if (rs == null) {
                JOptionPane.showMessageDialog(null, "Não Existe um Registro Selecionado para Edição!");

            } else {
                //cliente1.setiDUnico(rs.getInt("idUnico"));
                statusFrame = ManipulaComponentes.statusCadastro.Editando;

                ManipulaComponentes.gerenciaBotoes(botoes, statusFrame);
                this.setTitle("Softaway Sistemas - Atendimento - " + statusFrame);
            }
        }
        else if(statusFrame == statusFrame.Adicionando){
            
        }
        else if(statusFrame == statusFrame.Editando){
            
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnAddItemServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemServicoActionPerformed
         ArrayList<JTextField> camposEmBranco = new ArrayList<>();
        if (statusFrame == statusFrame.Navegando) {
            JOptionPane.showMessageDialog(null, "Você Precisa Iniciar um Novo Atendimento Antes de Inserir Itens!");
        } else if (statusFrame == statusFrame.Adicionando || statusFrame == statusFrame.Editando) {
            if (cliente == null) {
                JOptionPane.showMessageDialog(null, "Você Precisa Informar um Cliente Para o Atendimento!");
                return;
            } else {
                camposEmBranco.addAll(ManipulaComponentes.retornaNomeCampoObrigatorioVazio(camposObrigatorios));

                if (camposEmBranco.size() > 0) {
                    for (JTextField campoEmBranco : camposEmBranco) {
                        JOptionPane.showMessageDialog(null, "O Campo " + campoEmBranco.getName() + "é Obrigatório!");
                        campoEmBranco.requestFocus();
                        break;
                    }
                } else {
                    inserirItemNaGrade();
                }

            }

        }
    }//GEN-LAST:event_btnAddItemServicoActionPerformed

    private void btnBuscarItemServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarItemServicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarItemServicoActionPerformed

    private void btnAddClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddClienteActionPerformed
         
        if(novaChave == 0){
            JOptionPane.showMessageDialog(null, "Você Precisa Iniciar um Novo Atendimento Antes de Inserir Um Cliente!");
            return;
        }
        
        if(cliente == null){
            JOptionPane.showMessageDialog(null, "Nenhum Cliente Foi Selecionado para Inserir no Atendimento!");
            return;
        }
        
        AtendimentoFacade atendimentoFacade = new AtendimentoFacade();
        int retornoAddCliente = atendimentoFacade.insereClienteNoAtendimento(cliente, atendimento);
        if(retornoAddCliente <= 0 ){
            JOptionPane.showMessageDialog(null, "Não Foi Possível Inserir o Cliente na Nota!");
        }
        else{
            JOptionPane.showMessageDialog(null, "Cliente Inserido no Atendimento com Sucesso!");
        }
        
    }//GEN-LAST:event_btnAddClienteActionPerformed

    private void btnRemoveITemServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveITemServicoActionPerformed
     JOptionPane.showMessageDialog(null, cliente.getNome());
    }//GEN-LAST:event_btnRemoveITemServicoActionPerformed

    private void btnRemoverClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoverClienteActionPerformed

    private void carregaComboVendedores() {
        Connection conVendedor = DAO.getConexao();
        try {
            Statement stmVendedor = conVendedor.createStatement();
            String strSQLVendedor = "SELECT chaveunica,codigo,nome FROM vendedor WHERE nome IS NOT NULL";
            ResultSet rsVendedor = stmVendedor.executeQuery(strSQLVendedor);
            Auxiliares.GerenciarCombo.preencherCombo(rsVendedor, "chaveunica", "nome", cbVendedores);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Foi Possível Carregar a Lista de Vendedores! " + '\n' + ex.getMessage());
        }

    }

    private void aplicarMask() {

        if (rbPF.isSelected()) {
            jffCPF_CNPJ.setFormatterFactory(null);
            try {
                MaskFormatter format = new MaskFormatter("###.###.###-##");
                format.setPlaceholderCharacter('_');
                jffCPF_CNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(format));
                jffCPF_CNPJ.setValue(null);
                jffCPF_CNPJ.requestFocus();
                jffCPF_CNPJ.setCaretPosition(0);
            } catch (ParseException ex) {

            }
        } else if (rbPJ.isSelected()) {
            jffCPF_CNPJ.setFormatterFactory(null);
            try {
                MaskFormatter format = new MaskFormatter("##.###.###/####-##");
                format.setPlaceholderCharacter('_');
                jffCPF_CNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(format));
                jffCPF_CNPJ.setValue(null);
                jffCPF_CNPJ.requestFocus();
                jffCPF_CNPJ.setCaretPosition(0);
            } catch (ParseException ex) {

            }
        }
    }

    private void buscaCliente(String cpf_cnpj, String telefone) {

        List<Cliente> clientes = new ArrayList<Cliente>();
        Connection conBuscaCliente = DAO.getConexao();
        Statement stmConsultaCliente;
        ResultSet rsConsultaCliente;
        String strSQLConsultaCliente = "SELECT idUnico,codigo,nome,apelido,FONE1,CELULAR,CPF,RG,cnpj,ie FROM clientes WHERE ";

        if ((cpf_cnpj.equals("") || cpf_cnpj.equals("___.___.___-__") || cpf_cnpj.equals("__.___.___/____-__")) && telefone.equals("")) {
            JOptionPane.showMessageDialog(null, "Você Precisa Definir um Termo para a Busca!");
        } else if (!cpf_cnpj.equals("")) {

            String strSQLConsultaClienteCPF = strSQLConsultaCliente + " cpf='" + cpf_cnpj + "'";
            JOptionPane.showMessageDialog(null, strSQLConsultaClienteCPF);
            try {
                stmConsultaCliente = conBuscaCliente.createStatement();
                rsConsultaCliente = stmConsultaCliente.executeQuery(strSQLConsultaCliente);
                int contador = 0;
                while (rsConsultaCliente.next()) {
                    contador++;
                }

                if (contador > 0) {
                    while (rsConsultaCliente.next()) {
                        Cliente cliente = new Cliente();
                        cliente.setCodigo(rsConsultaCliente.getInt("codigo"));
                        cliente.setiDUnico(rsConsultaCliente.getInt("idUnico"));
                        cliente.setNome(rsConsultaCliente.getString("nome"));
                        cliente.setNomeFantasia(rsConsultaCliente.getString("apelido"));
                        cliente.setFonePrincipal(rsConsultaCliente.getString("FONE1"));
                        cliente.setCelular(rsConsultaCliente.getString("CELULAR"));
                        cliente.setCpf(rsConsultaCliente.getString("cpf"));
                        cliente.setRg(rsConsultaCliente.getString("RG"));
                        cliente.setCnpj(rsConsultaCliente.getString("cnpj"));
                        cliente.setIe(rsConsultaCliente.getString("ie"));

                        JOptionPane.showMessageDialog(null, cliente.getiDUnico() + ", " + cliente.getNome() + ", " + cliente.getNomeFantasia());

                        clientes.add(cliente);

                    }
                } else if (contador <= 0) {
                    String strSQLConsultaClienteCNPJ = strSQLConsultaCliente + " CNPJ='" + cpf_cnpj + "'";
                    JOptionPane.showMessageDialog(null, strSQLConsultaClienteCNPJ);
                    stmConsultaCliente = conBuscaCliente.createStatement();
                    rsConsultaCliente = stmConsultaCliente.executeQuery(strSQLConsultaClienteCNPJ);
                    while (rsConsultaCliente.next()) {
                        contador++;
                    }
                    if (contador > 0) {
                        while (rsConsultaCliente.next()) {

                            Cliente cliente = new Cliente();
                            cliente.setCodigo(rsConsultaCliente.getInt("codigo"));
                            cliente.setiDUnico(rsConsultaCliente.getInt("idUnico"));
                            cliente.setNome(rsConsultaCliente.getString("nome"));
                            cliente.setNomeFantasia(rsConsultaCliente.getString("apelido"));
                            cliente.setFonePrincipal(rsConsultaCliente.getString("FONE1"));
                            cliente.setCelular(rsConsultaCliente.getString("CELULAR"));
                            cliente.setCpf(rsConsultaCliente.getString("cpf"));
                            cliente.setRg(rsConsultaCliente.getString("RG"));
                            cliente.setCnpj(rsConsultaCliente.getString("cnpj"));
                            cliente.setIe(rsConsultaCliente.getString("ie"));

                            JOptionPane.showMessageDialog(null, cliente.getiDUnico() + ", " + cliente.getNome() + ", " + cliente.getNomeFantasia());

                            clientes.add(cliente);
                        }
                    }

                }

            } catch (SQLException ex) {

            }
        }
    }

    private ArrayList<Cliente> procuraClienteCPF(String cpfCliente) {

        String strSQLClienteCPF = "SELECT idUnico,codigo,nome,apelido,FONE1,CELULAR,CPF,RG,cnpj,ie FROM clientes WHERE cpf='" + cpfCliente + "'";
        ArrayList<Cliente> clientesCPF = new ArrayList<>();
        Connection conClienteCPF = DAO.getConexao();
        try {
            Statement stmClienteCPF = conClienteCPF.createStatement();
            ResultSet rsClienteCPF = stmClienteCPF.executeQuery(strSQLClienteCPF);

            while (rsClienteCPF.next()) {
                Cliente clienteCPF = new Cliente();
                clienteCPF.setiDUnico(rsClienteCPF.getInt("idUnico"));
                clienteCPF.setCodigo(rsClienteCPF.getInt("codigo"));
                clienteCPF.setNome(rsClienteCPF.getString("nome"));
                clienteCPF.setNomeFantasia(rsClienteCPF.getString("apelido"));
                clienteCPF.setFonePrincipal(rsClienteCPF.getString("FONE1"));
                clienteCPF.setCelular(rsClienteCPF.getString("CELULAR"));
                clienteCPF.setCpf(rsClienteCPF.getString("cpf"));
                clienteCPF.setRg(rsClienteCPF.getString("RG"));
                clienteCPF.setCnpj(rsClienteCPF.getString("cnpj"));
                clienteCPF.setIe(rsClienteCPF.getString("ie"));

                clientesCPF.add(clienteCPF);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro ao Consultar o cliente Pelo CPF! " + ex.getMessage());
        }
        return clientesCPF;
    }

    private ArrayList<Cliente> procuraClienteCNPJ(String cnpjCliente) {
        String strSQLClienteCNPJ = "SELECT idUnico,codigo,nome,apelido,FONE1,CELULAR,CPF,RG,cnpj,ie FROM clientes WHERE cnpj='" + cnpjCliente + "'";
        ArrayList<Cliente> clientesCNPJ = new ArrayList<>();
        Connection conClienteCNPJ = DAO.getConexao();
        try {
            Statement stmClienteCNPJ = conClienteCNPJ.createStatement();
            ResultSet rsClienteCNPJ = stmClienteCNPJ.executeQuery(strSQLClienteCNPJ);

            while (rsClienteCNPJ.next()) {
                Cliente clienteCNPJ = new Cliente();
                clienteCNPJ.setiDUnico(rsClienteCNPJ.getInt("idUnico"));
                clienteCNPJ.setCodigo(rsClienteCNPJ.getInt("codigo"));
                clienteCNPJ.setNome(rsClienteCNPJ.getString("nome"));
                clienteCNPJ.setNomeFantasia(rsClienteCNPJ.getString("apelido"));
                clienteCNPJ.setFonePrincipal(rsClienteCNPJ.getString("FONE1"));
                clienteCNPJ.setCelular(rsClienteCNPJ.getString("CELULAR"));
                clienteCNPJ.setCpf(rsClienteCNPJ.getString("cpf"));
                clienteCNPJ.setRg(rsClienteCNPJ.getString("RG"));
                clienteCNPJ.setCnpj(rsClienteCNPJ.getString("cnpj"));
                clienteCNPJ.setIe(rsClienteCNPJ.getString("ie"));

                clientesCNPJ.add(clienteCNPJ);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro ao Consultar o cliente Pelo CNPJ! " + ex.getMessage());
        }
        return clientesCNPJ;
    }

    private ArrayList<Cliente> procuraClienteTelefone1(String telefone) {
        String strSQLClienteFone1 = "SELECT idUnico,codigo,nome,apelido,FONE1,CELULAR,CPF,RG,cnpj,ie FROM clientes WHERE FONE1='" + telefone + "'";
        ArrayList<Cliente> clientesFone1 = new ArrayList<>();
        Connection conClienteCPF = DAO.getConexao();
        try {
            Statement stmClienteFone1 = conClienteCPF.createStatement();
            ResultSet rsClientefone1 = stmClienteFone1.executeQuery(strSQLClienteFone1);

            while (rsClientefone1.next()) {
                Cliente clienteFone1 = new Cliente();
                clienteFone1.setiDUnico(rsClientefone1.getInt("idUnico"));
                clienteFone1.setCodigo(rsClientefone1.getInt("codigo"));
                clienteFone1.setNome(rsClientefone1.getString("nome"));
                clienteFone1.setNomeFantasia(rsClientefone1.getString("apelido"));
                clienteFone1.setFonePrincipal(rsClientefone1.getString("FONE1"));
                clienteFone1.setCelular(rsClientefone1.getString("CELULAR"));
                clienteFone1.setCpf(rsClientefone1.getString("cpf"));
                clienteFone1.setRg(rsClientefone1.getString("RG"));
                clienteFone1.setCnpj(rsClientefone1.getString("cnpj"));
                clienteFone1.setIe(rsClientefone1.getString("ie"));

                clientesFone1.add(clienteFone1);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro ao Consultar o cliente Pelo CPF! " + ex.getMessage());
        }
        return clientesFone1;
    }

    private ArrayList<Cliente> procuraClienteCelular(String celular) {
        String strSQLClienteCelular = "SELECT idUnico,codigo,nome,apelido,FONE1,CELULAR,CPF,RG,cnpj,ie FROM clientes WHERE celular='" + celular + "'";
        ArrayList<Cliente> clientesCelular = new ArrayList<>();
        Connection conclienteCelular = DAO.getConexao();
        try {
            Statement stmClienteCelular = conclienteCelular.createStatement();
            ResultSet rsClienteCelular = stmClienteCelular.executeQuery(strSQLClienteCelular);

            while (rsClienteCelular.next()) {
                Cliente clienteCelular = new Cliente();
                clienteCelular.setiDUnico(rsClienteCelular.getInt("idUnico"));
                clienteCelular.setCodigo(rsClienteCelular.getInt("codigo"));
                clienteCelular.setNome(rsClienteCelular.getString("nome"));
                clienteCelular.setNomeFantasia(rsClienteCelular.getString("apelido"));
                clienteCelular.setFonePrincipal(rsClienteCelular.getString("FONE1"));
                clienteCelular.setCelular(rsClienteCelular.getString("CELULAR"));
                clienteCelular.setCpf(rsClienteCelular.getString("cpf"));
                clienteCelular.setRg(rsClienteCelular.getString("RG"));
                clienteCelular.setCnpj(rsClienteCelular.getString("cnpj"));
                clienteCelular.setIe(rsClienteCelular.getString("ie"));

                clientesCelular.add(clienteCelular);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um Erro ao Consultar o cliente Pelo CPF! " + ex.getMessage());
        }
        return clientesCelular;
    }

    private void inserirItemNaGrade() {
        ItemParaServico item = new ItemParaServico();

        item.setDescricao(txtItem.getText());
        item.setModelo(txtModelo.getText());
        item.setFabricante(txtMarca.getText());
        item.setNumeroSerie(txtNSerie.getText());
        item.setCampoLivre(txtLivre.getText());
        item.setAno1(dateAno.getYear());
        
        
        
        int retorno = ItemParaServicoFacade.inserirItemNoAtendimento(item, novaChave, tableItensParaServico.getRowCount());
        if (retorno <= 0) {
            JOptionPane.showMessageDialog(null, "Não Foi Possível Inserir o Item!");
            return;
        } else {
            modelItens.inserir(item);
            JOptionPane.showMessageDialog(null, "Item Inserido com Sucesso no Atendimento!");

        }

    }

    private void carregaValoresPadrao() {
        Connection cnPadrao = DAO.getConexao();
        String strSQLPadrao = "SELECT tipoPessoaPadraoCliente FROM lojas WHERE atual='S'";
        try {
            PreparedStatement pstmPadrao = cnPadrao.prepareStatement(strSQLPadrao);
            ResultSet valoresPadrao = pstmPadrao.executeQuery();
            if (valoresPadrao.next()) {
                if (valoresPadrao.getString("tipoPessoaPadraoCliente").equals("PF")) {
                    rbPF.setSelected(true);
                } else if (valoresPadrao.getString("tipoPessoaPadraoCliente").equals("PJ")) {
                    rbPJ.setSelected(true);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmAtendimento.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void formataTabela() {
        tableItensParaServico.getColumnModel().getColumn(0).setPreferredWidth(30);
        tableItensParaServico.getColumnModel().getColumn(1).setPreferredWidth(250);
        tableItensParaServico.getColumnModel().getColumn(2).setPreferredWidth(100);
        tableItensParaServico.getColumnModel().getColumn(3).setPreferredWidth(100);
        tableItensParaServico.getColumnModel().getColumn(4).setPreferredWidth(100);
        tableItensParaServico.getColumnModel().getColumn(5).setPreferredWidth(100);
        tableItensParaServico.getColumnModel().getColumn(6).setPreferredWidth(70);

        tableItensParaServico.setRowHeight(25);
    }

    private ArrayList<Cliente> pesquisarClientes() {
        Cliente clienteRetornado = null;
        String termoDaBusca = "";
        ArrayList<Cliente> clientes = null;

        //Se tudo estiver em branco ou apenas com as máscaras...
        if ((jffCPF_CNPJ.getText().equals("") || jffCPF_CNPJ.getText().equals("___.___.___-__") || jffCPF_CNPJ.getText().equals("__.___.___/____-__")) && txtTelefone.getText().equals("(0  )     -    ")) {
            //JOptionPane.showMessageDialog(null, "Você Precisa Definir um Termo para a Busca!");
            return null;
            //Se houver digitação no campo CPF/CNPJ...
        } else if (!(jffCPF_CNPJ.getText().equals("") || jffCPF_CNPJ.getText().equals("___.___.___-__") || jffCPF_CNPJ.getText().equals("__.___.___/____-__"))) {
            termoDaBusca = jffCPF_CNPJ.getText();
            //Se campo CPF/CNPJ estiver em branco ou apenas com a máscara, mas telefone tiver conteúdo...
        } else if ((jffCPF_CNPJ.getText().equals("") || jffCPF_CNPJ.getText().equals("___.___.___-__") || jffCPF_CNPJ.getText().equals("__.___.___/____-__")) && (!txtTelefone.getText().equals("(0  )     -    "))) {
            termoDaBusca = txtTelefone.getText().trim();
        }

        if (procuraClienteCPF(termoDaBusca).size() > 0) {
            clientes = procuraClienteCPF(termoDaBusca);
        } else if (procuraClienteCNPJ(termoDaBusca).size() > 0) {
            clientes = procuraClienteCNPJ(termoDaBusca);
        } else if (procuraClienteTelefone1(termoDaBusca).size() > 0) {
            clientes = procuraClienteTelefone1(termoDaBusca);
        } else if (procuraClienteCelular(termoDaBusca).size() > 0) {
            clientes = procuraClienteCelular(termoDaBusca);
        } else {
            return null;
        }

        return clientes;
    }
    
    private void vinculaObjetoClienteACamposCliente(){
        
        try{
        BindingGroup grupoBinding = new BindingGroup();
        Binding binding;
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ, cliente,BeanProperty.create("codigo"),txtCodigoCliente,BeanProperty.create("text"));
        grupoBinding.addBinding(binding);
        
        //binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ,cliente,BeanProperty.create("iDUnico"), txtCodigoCliente,BeanProperty.create("text"));
       // grupoBinding.addBinding(binding);
        
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ,cliente,BeanProperty.create("nome"), txtNomeRSocial,BeanProperty.create("text"));
        grupoBinding.addBinding(binding);
        
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ,cliente,BeanProperty.create("nomeFantasia"), txtNomeFantasia,BeanProperty.create("text"));
        grupoBinding.addBinding(binding);
        
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ,cliente,BeanProperty.create("rg"), txtRGIE,BeanProperty.create("text"));
        grupoBinding.addBinding(binding);
        
        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ,cliente,BeanProperty.create("ie"), txtRGIE,BeanProperty.create("text"));
        grupoBinding.addBinding(binding);
 
        grupoBinding.bind();
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAtendimento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddCliente;
    private javax.swing.JButton btnAddItemServico;
    private javax.swing.JButton btnBuscarItemServico;
    private javax.swing.JButton btnDispose;
    private javax.swing.JButton btnEdit;
    private javax.swing.ButtonGroup btnGroupTipoPessoa;
    private javax.swing.JButton btnPesquisarCliente;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnRemoveITemServico;
    private javax.swing.JButton btnRemoverCliente;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cbVendedores;
    private com.toedter.calendar.JYearChooser dateAno;
    private com.toedter.calendar.JDateChooser dateDataAtendimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JFormattedTextField jffCPF_CNPJ;
    private javax.swing.JLabel jlLogo;
    private javax.swing.JLabel labelCodigoAtendimento;
    private javax.swing.JPanel panelBotoesCliente;
    private javax.swing.JPanel panelBotoesItens;
    private javax.swing.JPanel panelCabecalho;
    private javax.swing.JPanel panelConsulta;
    private javax.swing.JPanel panelRadioButton;
    private javax.swing.JRadioButton rbPF;
    private javax.swing.JRadioButton rbPJ;
    private javax.swing.JTable tableItensParaServico;
    private javax.swing.JTextField ttPAtrimonio;
    private javax.swing.JTextField txtCodigoCliente;
    private javax.swing.JTextField txtContato;
    private javax.swing.JTextField txtItem;
    private javax.swing.JTextField txtLivre;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtNSerie;
    private javax.swing.JTextField txtNomeFantasia;
    private javax.swing.JTextField txtNomeRSocial;
    private javax.swing.JTextField txtRGIE;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
