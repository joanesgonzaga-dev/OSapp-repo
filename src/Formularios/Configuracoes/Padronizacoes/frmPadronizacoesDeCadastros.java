/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Formularios.Configuracoes.Padronizacoes;

import Auxiliares.ControlarDigitacao;
import Auxiliares.GerenciaJFrames;
import Auxiliares.GerenciarCombo;
import Auxiliares.ItemCombo;
import Configuracoes.DAO;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Joanes Gonzaga
 */
public class frmPadronizacoesDeCadastros extends javax.swing.JFrame {

    Statement stm;
    Connection con;
    ResultSet rs;
    String idBuscaPadrao = "";
    
    
    /**
     * Creates new form frmPadronizacoesDeCadastros
     */
    public frmPadronizacoesDeCadastros() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        GerenciaJFrames gerenciaFrame = new GerenciaJFrames();
        gerenciaFrame.posicionaFrame(this);
        
        carregaComboCNAEDescricao();
        carregaComboPaises();
        carregaComboNaturalidade();
        carregaComboUFs();
        carregaComboMunicipios();
        carregaComboBairros();
        
        
        carregaValoresPadrao();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnGroupGenero = new javax.swing.ButtonGroup();
        btnGroupStatus = new javax.swing.ButtonGroup();
        btnGroupTipoPessoa = new javax.swing.ButtonGroup();
        btnGroupIDBusca = new javax.swing.ButtonGroup();
        btnGroupTipoBusca = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        rbMasc = new javax.swing.JRadioButton();
        rbFem = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        rbAtivo = new javax.swing.JRadioButton();
        rbInativo = new javax.swing.JRadioButton();
        cbEstadoCivil = new javax.swing.JComboBox();
        btnGravarPF = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodCNAE = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbCNAEDesc = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cbRegimeTributario = new javax.swing.JComboBox();
        btnGravarPJ = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        btnLocalizarCNAE = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        ckbIsentoICMS = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        rbPF = new javax.swing.JRadioButton();
        rbPJ = new javax.swing.JRadioButton();
        rbE = new javax.swing.JRadioButton();
        btnGravarComum = new javax.swing.JButton();
        cbPaises = new javax.swing.JComboBox();
        cbNaturalidade = new javax.swing.JComboBox();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cbUFs = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        cbMunicipios = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        rbCodigo = new javax.swing.JRadioButton();
        rbNome = new javax.swing.JRadioButton();
        rbCPF = new javax.swing.JRadioButton();
        rbCNPJ = new javax.swing.JRadioButton();
        rbTelefone = new javax.swing.JRadioButton();
        rbRSocial = new javax.swing.JRadioButton();
        jPanel17 = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        rbTipoBuscaTodos = new javax.swing.JRadioButton();
        rbTipoBuscaAcumulativa = new javax.swing.JRadioButton();
        rbTipoBuscaNDA = new javax.swing.JRadioButton();
        cbBairros = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        cbLojas = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Configurações do Sistema - Padronizações de Cadastros");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Pessoa Física:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Gênero:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel6.setLayout(new java.awt.GridBagLayout());

        btnGroupGenero.add(rbMasc);
        rbMasc.setText("Masculino");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel6.add(rbMasc, gridBagConstraints);

        btnGroupGenero.add(rbFem);
        rbFem.setText("Feminino");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel6.add(rbFem, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jPanel6, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Status:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel7.setLayout(new java.awt.GridBagLayout());

        btnGroupStatus.add(rbAtivo);
        rbAtivo.setText("Ativo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel7.add(rbAtivo, gridBagConstraints);

        btnGroupStatus.add(rbInativo);
        rbInativo.setText("Inativo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel7.add(rbInativo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jPanel7, gridBagConstraints);

        cbEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Casado", "Divorciado", "Solteiro", "Viúvo", "Outros" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(cbEstadoCivil, gridBagConstraints);

        btnGravarPF.setText("Gravar");
        btnGravarPF.setPreferredSize(new java.awt.Dimension(89, 23));
        btnGravarPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarPFActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(btnGravarPF, gridBagConstraints);

        jLabel2.setText("Estado Civil: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jLabel2, gridBagConstraints);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel3.add(jPanel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.33;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Pessoa Jurídica:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Código CNAE Padrão:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jLabel1, gridBagConstraints);

        txtCodCNAE.setDocument(new ControlarDigitacao("NUMERICO", true));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(txtCodCNAE, gridBagConstraints);

        jLabel3.setText("CNAE:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jLabel3, gridBagConstraints);

        cbCNAEDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCNAEDescActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(cbCNAEDesc, gridBagConstraints);

        jLabel4.setText("Regime Tributário:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(cbRegimeTributario, gridBagConstraints);

        btnGravarPJ.setText("Gravar");
        btnGravarPJ.setPreferredSize(new java.awt.Dimension(89, 23));
        btnGravarPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarPJActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(btnGravarPJ, gridBagConstraints);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        jPanel4.add(jPanel9, gridBagConstraints);

        btnLocalizarCNAE.setText("Localizar");
        btnLocalizarCNAE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarCNAEActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(btnLocalizarCNAE, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.33;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados Comuns:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel5.setLayout(new java.awt.GridBagLayout());

        ckbIsentoICMS.setText("Isento ICMS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(ckbIsentoICMS, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tipo de Pessoa Padrão:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel11.setLayout(new java.awt.GridBagLayout());

        btnGroupTipoPessoa.add(rbPF);
        rbPF.setText("Pessoa Física");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel11.add(rbPF, gridBagConstraints);

        btnGroupTipoPessoa.add(rbPJ);
        rbPJ.setText("Pessoa Jurídica");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel11.add(rbPJ, gridBagConstraints);

        btnGroupTipoPessoa.add(rbE);
        rbE.setText("Estrangeiro");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel11.add(rbE, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(jPanel11, gridBagConstraints);

        btnGravarComum.setText("Gravar");
        btnGravarComum.setPreferredSize(new java.awt.Dimension(89, 23));
        btnGravarComum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarComumActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(btnGravarComum, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(cbPaises, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(cbNaturalidade, gridBagConstraints);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.7;
        jPanel5.add(jPanel12, gridBagConstraints);

        jLabel5.setText("Nacionalidade:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Naturalidade:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(jLabel6, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jLabel7.setText("Estado:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel13.add(jLabel7, gridBagConstraints);

        cbUFs.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbUFsItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel13.add(cbUFs, gridBagConstraints);

        jLabel8.setText("Municípios:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel13.add(jLabel8, gridBagConstraints);

        cbMunicipios.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMunicipiosItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel13.add(cbMunicipios, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel5.add(jPanel13, gridBagConstraints);

        jLabel9.setText("Bairro Padrão:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(jLabel9, gridBagConstraints);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Padrões da Busca:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12))); // NOI18N
        jPanel14.setLayout(new java.awt.GridBagLayout());

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Opção de Busca Padrão:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12))); // NOI18N
        jPanel15.setLayout(new java.awt.GridBagLayout());

        btnGroupIDBusca.add(rbCodigo);
        rbCodigo.setText("Código");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel15.add(rbCodigo, gridBagConstraints);

        btnGroupIDBusca.add(rbNome);
        rbNome.setText("Nome Fantasia");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel15.add(rbNome, gridBagConstraints);

        btnGroupIDBusca.add(rbCPF);
        rbCPF.setText("CPF/CNPJ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel15.add(rbCPF, gridBagConstraints);

        btnGroupIDBusca.add(rbCNPJ);
        rbCNPJ.setText("CNPJ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel15.add(rbCNPJ, gridBagConstraints);

        btnGroupIDBusca.add(rbTelefone);
        rbTelefone.setText("Telefone Principal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel15.add(rbTelefone, gridBagConstraints);

        btnGroupIDBusca.add(rbRSocial);
        rbRSocial.setText("Razão Social");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel15.add(rbRSocial, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel14.add(jPanel15, gridBagConstraints);

        jPanel17.setLayout(new java.awt.GridBagLayout());

        btnFechar.setText("FECHAR");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 25;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel17.add(btnFechar, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.4;
        jPanel14.add(jPanel17, gridBagConstraints);

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tipo de Busca:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12))); // NOI18N
        jPanel16.setLayout(new java.awt.GridBagLayout());

        btnGroupTipoBusca.add(rbTipoBuscaTodos);
        rbTipoBuscaTodos.setText("Todos");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel16.add(rbTipoBuscaTodos, gridBagConstraints);

        btnGroupTipoBusca.add(rbTipoBuscaAcumulativa);
        rbTipoBuscaAcumulativa.setText("Acumulativa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel16.add(rbTipoBuscaAcumulativa, gridBagConstraints);

        btnGroupTipoBusca.add(rbTipoBuscaNDA);
        rbTipoBuscaNDA.setText("NDA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel16.add(rbTipoBuscaNDA, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        jPanel14.add(jPanel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel5.add(jPanel14, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(cbBairros, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.33;
        jPanel1.add(jPanel5, gridBagConstraints);

        jTabbedPane1.addTab("Cadastro de Clientes", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 951, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Cadastro de Fornecedores", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.8;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        cbLojas.setPreferredSize(new java.awt.Dimension(28, 35));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel8.add(cbLojas, gridBagConstraints);

        jButton1.setText("Gravar Loja");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel8.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(jPanel8, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGravarPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarPFActionPerformed
        
        String genero = "";
        if(rbMasc.isSelected()){
            genero = "M";
        }
        else if(rbFem.isSelected()){
            genero = "F";
        }
        
        Connection con4 = DAO.getConexao();
        
        try{
        String sqlPF = "UPDATE lojas SET generoPadraoCliente=?, statusPadraoCliente=?,estadoCivilPadraoCliente=?,isentoICMSPadraoCliente=? WHERE atual ='S' ";
        PreparedStatement stm4 = con4.prepareStatement(sqlPF);
        stm4.setString(1, genero);
        stm4.setBoolean(2, (rbAtivo.isSelected())? true:false);
        stm4.setString(3, (String)cbEstadoCivil.getSelectedItem());
        stm4.setBoolean(4, (ckbIsentoICMS.isSelected())? true:false);
        
        int retorno = stm4.executeUpdate();
        
        if(retorno > 0){
            JOptionPane.showMessageDialog(null, "Parâmetros Atualizados com Sucesso");
        }
        else{
            JOptionPane.showMessageDialog(null, "Não Foi Possível Atualizar os Parâmetros");
        }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Ocorreu Erro Ao Gravar Alterações " + ex.getMessage());
        }
    }//GEN-LAST:event_btnGravarPFActionPerformed

    private void btnGravarPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarPJActionPerformed
        
        Connection con5 = DAO.getConexao();
        try{
        String sql5 = "UPDATE lojas SET cnaePadraoCodigoCliente = ?,cnaePadraoDescCliente=?, regimeTributarioPadraoCliente= ?,isentoICMSPadraoCliente=? WHERE atual = 'S' ";
        PreparedStatement stm5 = con5.prepareStatement(sql5);
        stm5.setString(1, txtCodCNAE.getText());
        stm5.setString(2, (String)cbCNAEDesc.getSelectedItem());
        stm5.setString(3, (String)cbRegimeTributario.getSelectedItem());
        stm5.setBoolean(4, ckbIsentoICMS.isSelected());
        
        int retorno = stm5.executeUpdate();
        
        if(retorno > 0){
            JOptionPane.showMessageDialog(null, "Parâmetros Atualizados com Sucesso");
        }
        else{
           JOptionPane.showMessageDialog(null, "Não Foi Possível Atualizar os Parâmetros"); 
        }
        
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Ocorreu Erro Ao Gravar Alterações " + ex.getMessage());
        }
    }//GEN-LAST:event_btnGravarPJActionPerformed

    private void btnGravarComumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarComumActionPerformed
        Connection con6 = DAO.getConexao();
        try{
        String sql6 = "UPDATE lojas SET tipoPessoaPadraoCliente = ?,isentoICMSPadraoCliente=?,nacionalidadePadraoCliente=?,naturalidadePadraoCliente=?,ufPadraoCliente=?,municipioPadraoCliente=?,bairroPadraoCliente=?,idBuscaPadrao=?, tipoBuscaPadrao=? WHERE atual = 'S' ";
        PreparedStatement stm6 = con6.prepareStatement(sql6);
        
        String tipoPessoa = "";
        
        if(rbPF.isSelected()){
            tipoPessoa = "PF";
        }
        else if (rbPJ.isSelected()){
            tipoPessoa = "PJ";
        }
        else if (rbE.isSelected()){
            tipoPessoa = "E";
        }
        else{
            JOptionPane.showMessageDialog(null, "Você Precisa Selecionar um Tipo de Pessoa Padrão (Física, Jurídica ou Estrangeito!)");
        }
        
        
            
        stm6.setString(1, tipoPessoa);
        stm6.setBoolean(2, ckbIsentoICMS.isSelected());
        stm6.setString(3, cbPaises.getSelectedItem().toString());
        stm6.setString(4, cbNaturalidade.getSelectedItem().toString());
        stm6.setString(5, cbUFs.getSelectedItem().toString());
        stm6.setString(6,cbMunicipios.getSelectedItem().toString());
        stm6.setString(7, cbBairros.getSelectedItem().toString());
        
        
        if(rbCodigo.isSelected()){
            idBuscaPadrao = "CD";
        }
        else if(rbNome.isSelected()){
            idBuscaPadrao = "NF";
        }
        else if(rbRSocial.isSelected()){
            idBuscaPadrao = "RS";
        }
        else if(rbCPF.isSelected()){
            idBuscaPadrao = "CPF";
        }
        else if(rbCNPJ.isSelected()){
            idBuscaPadrao = "CNPJ";
        }
        else if(rbTelefone.isSelected()){
                idBuscaPadrao = "TF";
                }
        stm6.setString(8, idBuscaPadrao);
        
        
        int tipoBuscaPadrao = -1;
        
        if(rbTipoBuscaNDA.isSelected()){
            tipoBuscaPadrao = 0;
        }
        else if(rbTipoBuscaAcumulativa.isSelected()){
            tipoBuscaPadrao = 1;
        }
        else if(rbTipoBuscaTodos.isSelected()){
            tipoBuscaPadrao = 2;
        }
        
        stm6.setInt(9, tipoBuscaPadrao);
        
        
        int retorno = stm6.executeUpdate();
        
        if(retorno > 0){
            JOptionPane.showMessageDialog(null, "Parâmetros Atualizados com Sucesso");
        }
        else{
           JOptionPane.showMessageDialog(null, "Não Foi Possível Atualizar os Parâmetros"); 
        }
        
        carregaValoresPadrao();
        
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Ocorreu Erro Ao Gravar Alterações " + ex.getMessage());
        }
    }//GEN-LAST:event_btnGravarComumActionPerformed

    private void btnLocalizarCNAEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarCNAEActionPerformed
        
        //Criar código para localização de Código CNAE
        
        if((txtCodCNAE.getText()).trim().equals("")){
            JOptionPane.showMessageDialog(null, "O Campo Não Pode Estar Vazio");
        }
        else{
        int codigo = Integer.parseInt(txtCodCNAE.getText()) ;
        Connection con = DAO.getConexao();
        String str = "SELECT codigo, descCNAE FROM CNAE WHERE codigo =?";
        try{
        PreparedStatement pStm = con.prepareStatement(str);
        pStm.setInt(1, codigo);
        
        ResultSet rs6 = pStm.executeQuery();
        
        if(!rs6.next()){
            
           JOptionPane.showMessageDialog(null, "Código CNAE Não Encontrado"); 
            
            
        }
        else{
            //JOptionPane.showMessageDialog(null, rs6.getString("descCNAE"));
            txtCodCNAE.setText("" + codigo);
            cbCNAEDesc.setSelectedItem(rs6.getString("descCNAE"));
            
            
        }
        }
        catch(SQLException ex){
            
        } 
        }
    }//GEN-LAST:event_btnLocalizarCNAEActionPerformed

    private void cbCNAEDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCNAEDescActionPerformed
        
        
        Connection con10 = DAO.getConexao();
        String query = "SELECT codigo,descCNAE FROM CNAE WHERE descCNAE =?";
        
        try{
        PreparedStatement pSTM = con10.prepareStatement(query);
        pSTM.setString(1, cbCNAEDesc.getSelectedItem().toString());
        
        ResultSet rs20 = pSTM.executeQuery();
        
        while(rs20.next()){
            txtCodCNAE.setText("" + rs20.getInt("codigo"));
        }     
        }
        catch(SQLException ex){
            
        }
        //JOptionPane.showMessageDialog(null, cbCNAEDesc.getSelectedItem());
        
    }//GEN-LAST:event_cbCNAEDescActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
       
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void cbUFsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbUFsItemStateChanged
        carregaComboMunicipios();
    }//GEN-LAST:event_cbUFsItemStateChanged

    private void cbMunicipiosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMunicipiosItemStateChanged
      carregaComboBairros();
    }//GEN-LAST:event_cbMunicipiosItemStateChanged

    private void carregaComboCNAEDescricao(){
        Connection con = DAO.getConexao();
        String str = "SELECT codigo, descCNAE FROM CNAE ORDER BY codigo";
        try{
        Statement stm = con.createStatement();
        ResultSet rs = stm.executeQuery(str);
        
        while(rs.next()){
            cbCNAEDesc.addItem(rs.getString("descCNAE"));
        }
        
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }  
    }
    
    private void carregaComboPaises() {

        Connection con = DAO.getConexao();
        String str = "SELECT codigo, nome FROM NFE_Pais ORDER BY nome";
        try {
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(str);
            while(rs.next()){
                cbPaises.addItem(rs.getString("nome"));
            }
            //GerenciarCombo.preencherCombo(rs, "codigo", "nome", cbPaises);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    
    private void carregaComboNaturalidade() {
        Connection con = DAO.getConexao();
        String str = "SELECT codigo, ESTADO FROM CEP_UF ORDER BY ESTADO";
        try {
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(str);
            while(rs.next()){
                cbNaturalidade.addItem(rs.getString("ESTADO".trim()));
            }
            //GerenciarCombo.preencherCombo(rs, "codigo", "ESTADO", cbNaturalidade);

        } catch (SQLException ex) {

        }
    }
    
    private void carregaComboUFs() {
        Connection con = DAO.getConexao();
        String str = "SELECT codigo,nome FROM CEP_UF ORDER BY nome";

        try {
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(str);

            GerenciarCombo.preencherCombo(rs, "codigo", "nome", cbUFs);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    
    private void carregaComboMunicipios() {

        Connection con = DAO.getConexao();
        ItemCombo itemUF = (ItemCombo)cbUFs.getSelectedItem();
        String codUF = itemUF.getIndice().toString();
        codUF = codUF.substring(0, 2);
        
        String str = "SELECT CODIGO, MUNICIPIO FROM CEP_MUNICIPIO WHERE CODIGO LIKE '" + codUF + "%'";
        try {
            Statement stm = con.createStatement();
            ResultSet rsMunicipio = stm.executeQuery(str);
            GerenciarCombo.preencherCombo(rsMunicipio, "CODIGO", "MUNICIPIO", cbMunicipios);
            SetaMunicipioPadrao();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não Foi Possível Carregar a Lista de Municípios! " + '\n' + ex.getMessage());
        }
    }
    
    private void SetaMunicipioPadrao(){
        Connection conDefault = DAO.getConexao();
        
        String sqlDefault = "SELECT municipioPadraoCliente FROM lojas WHERE atual='S'";
        try {
            Statement stmDefault = conDefault.createStatement();
            ResultSet rsDefault1 = stmDefault.executeQuery(sqlDefault);
            
            if(rsDefault1.next()){
                GerenciarCombo.setarOpcaocombo(cbMunicipios, rsDefault1.getString("municipioPadraoCliente".trim()));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Deu Erro! - " + ex.getMessage());
        }
        
    }
    
    public void filtraCbMunicipios(){
        
        cbMunicipios.removeAllItems();
        ItemCombo itemUF = (ItemCombo)cbUFs.getSelectedItem();
        String codigoUF = itemUF.getIndice().toString();
        //codigoUF.substring(0, 2);
        
        String strSQL = "SELECT municipio from CEP_MUNICIPIO WHERE codigo LIKE '" + codigoUF.substring(0, 2) + "%'";
        
        Connection con = DAO.getConexao();
        try{
        Statement stm = con.createStatement();
        ResultSet rsMunicipios = stm.executeQuery(strSQL);
        
        while(rsMunicipios.next()){
            cbMunicipios.addItem(rsMunicipios.getString("municipio"));
        }
        
        }
        catch(SQLException ex){
            
        }
        
    }
    
    private void carregaComboBairros(){
        Connection conBairros = DAO.getConexao();
        ItemCombo itemMunicipio = (ItemCombo)cbMunicipios.getSelectedItem();
        String strBairros = "SELECT DISTINCT bairro,codmunicipio FROM CEP WHERE codmunicipio="+ itemMunicipio.getIndice().toString();

        try {
            Statement stmBairros = conBairros.createStatement();
            ResultSet rsBairros = stmBairros.executeQuery(strBairros);
            GerenciarCombo.preencherCombo(rsBairros, "codmunicipio", "bairro", cbBairros);
            SetaBairroPadrao();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    
    private void SetaBairroPadrao(){
        Connection conDefault = DAO.getConexao();
        
        String sqlDefault = "SELECT bairroPadraoCliente FROM lojas WHERE atual='S'";
        try {
            Statement stmDefault = conDefault.createStatement();
            ResultSet rsBairroDefault = stmDefault.executeQuery(sqlDefault);
            
            if(rsBairroDefault.next()){
                GerenciarCombo.setarOpcaocombo(cbMunicipios, rsBairroDefault.getString("bairroPadraoCliente".trim()));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Deu Erro! - " + ex.getMessage());
        }
        
    }
    
    public void carregaValoresPadrao(){
        //Carrega ComboBox Lojas
        Connection conLojas = DAO.getConexao();
    
        try{
        Statement stmLojas = conLojas.createStatement();
        ResultSet rsLojas = stmLojas.executeQuery("SELECT codigo, nome, atual FROM lojas ORDER BY nome");
        
            while(rsLojas.next()){
                cbLojas.addItem((String)rsLojas.getString("nome"));
            }
        
        }
        catch(SQLException exLojas){
            exLojas.getMessage();
        }
    
        //Carrega ComboBox Regime Tributário
        Connection conRT = DAO.getConexao();
        try{
        Statement stm1 = conRT.createStatement();
        ResultSet rs2 = stm1.executeQuery("SELECT nome FROM NFE_RegimeTributario ORDER BY nome");
        
        while(rs2.next()){
            cbRegimeTributario.addItem(rs2.getString("nome"));
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
        con = Configuracoes.DAO.getConexao();
        String sql = "SELECT * FROM lojas WHERE atual = 'S' ";
        
        try{
        stm = con.createStatement();
        rs = stm.executeQuery(sql);
        
        while(rs.next()){
            if(rs.getString("generoPadraoCliente").equals("M")){
                rbMasc.setSelected(true);
            }
            else if(rs.getString("generoPadraoCliente").equals("F")){
                rbFem.setSelected(true);
            }
            else{
                rbMasc.setSelected(false);
                rbFem.setSelected(false);
            }
            
            if(rs.getBoolean("statusPadraoCliente")){
                rbAtivo.setSelected(true);
            }
            else{
                rbInativo.setSelected(true);
            }
            
            if(rs.getString("tipoPessoaPadraoCliente").equals("PF")){
                rbPF.setSelected(true);
            }
            else if(rs.getString("tipoPessoaPadraoCliente").equals("PJ")){
                rbPJ.setSelected(true);
            }
            else if(rs.getString("tipoPessoaPadraoCliente").equals("E")){
                rbE.setSelected(true);
            }
            
            else{
                rbPF.setSelected(false);
                rbPJ.setSelected(false);
                rbE.setSelected(false);
            }
            
            cbEstadoCivil.setSelectedItem(rs.getString("estadoCivilPadraoCliente").toString());
            
            txtCodCNAE.setText(rs.getString("cnaePadraoCodigoCliente"));
            
            cbCNAEDesc.setSelectedItem(rs.getString("cnaePadraoDescCliente"));
            
            cbRegimeTributario.setSelectedItem(rs.getString("regimeTributarioPadraoCliente"));
            
            cbLojas.setSelectedItem((String)rs.getString("nome"));
            
            ckbIsentoICMS.setSelected((rs.getBoolean("isentoICMSPadraoCliente"))? true:false);
            
            cbPaises.setSelectedItem(rs.getString("nacionalidadePadraoCliente"));
            GerenciarCombo.setarOpcaocombo(cbUFs, rs.getString("ufPadraoCliente"));
            //txtMunicipioPadraoCliente.setText(rs.getString("municipioPadraoCliente"));
            
            idBuscaPadrao = rs.getString("idBuscaPadrao");
            
            if(idBuscaPadrao.equals("CD")){
                rbCodigo.setSelected(true);
            }
            else if(idBuscaPadrao.equals("CPF")){
                rbCPF.setSelected(true);
            }
            else if(idBuscaPadrao.equals("CNPJ")){
                rbCNPJ.setSelected(true);
            }
            else if(idBuscaPadrao.equals("NF")){
                rbNome.setSelected(true);
            }
            else if(idBuscaPadrao.equals("RS")){
                rbRSocial.setSelected(true);
            }
            else if(idBuscaPadrao.equals("TF")){
                rbTelefone.setSelected(true);
            }
            
            int tipoBuscaPadrao = rs.getInt("tipoBuscaPadrao");
            if(tipoBuscaPadrao == 0){
                rbTipoBuscaNDA.setSelected(true);
            }
            else if(tipoBuscaPadrao == 1){
                rbTipoBuscaAcumulativa.setSelected(true);
            }
            else if(tipoBuscaPadrao == 2){
                rbTipoBuscaTodos.setSelected(true);
            }
            
        }
        }
        catch(SQLException ex){
            
            JOptionPane.showMessageDialog(null,ex.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPadronizacoesDeCadastros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPadronizacoesDeCadastros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPadronizacoesDeCadastros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPadronizacoesDeCadastros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPadronizacoesDeCadastros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnGravarComum;
    private javax.swing.JButton btnGravarPF;
    private javax.swing.JButton btnGravarPJ;
    private javax.swing.ButtonGroup btnGroupGenero;
    private javax.swing.ButtonGroup btnGroupIDBusca;
    private javax.swing.ButtonGroup btnGroupStatus;
    private javax.swing.ButtonGroup btnGroupTipoBusca;
    private javax.swing.ButtonGroup btnGroupTipoPessoa;
    private javax.swing.JButton btnLocalizarCNAE;
    private javax.swing.JComboBox cbBairros;
    private javax.swing.JComboBox cbCNAEDesc;
    private javax.swing.JComboBox cbEstadoCivil;
    private javax.swing.JComboBox cbLojas;
    private javax.swing.JComboBox cbMunicipios;
    private javax.swing.JComboBox cbNaturalidade;
    private javax.swing.JComboBox cbPaises;
    private javax.swing.JComboBox cbRegimeTributario;
    private javax.swing.JComboBox cbUFs;
    private javax.swing.JCheckBox ckbIsentoICMS;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rbAtivo;
    private javax.swing.JRadioButton rbCNPJ;
    private javax.swing.JRadioButton rbCPF;
    private javax.swing.JRadioButton rbCodigo;
    private javax.swing.JRadioButton rbE;
    private javax.swing.JRadioButton rbFem;
    private javax.swing.JRadioButton rbInativo;
    private javax.swing.JRadioButton rbMasc;
    private javax.swing.JRadioButton rbNome;
    private javax.swing.JRadioButton rbPF;
    private javax.swing.JRadioButton rbPJ;
    private javax.swing.JRadioButton rbRSocial;
    private javax.swing.JRadioButton rbTelefone;
    private javax.swing.JRadioButton rbTipoBuscaAcumulativa;
    private javax.swing.JRadioButton rbTipoBuscaNDA;
    private javax.swing.JRadioButton rbTipoBuscaTodos;
    private javax.swing.JTextField txtCodCNAE;
    // End of variables declaration//GEN-END:variables
}
